@import 'normalize';
@import 'variables';


/********************************
GENERAL
********************************/

* {
  box-sizing: border-box;
}


.flex {
  display: flex;
}

/********************************
Top Navigation Bar
********************************/

.top-banner {
  position: absolute;
  height: $top-banner-height;
  line-height: $top-banner-height;
  text-align: center;
  width: 100%;
  top: 0;

  h1 {
    font-size: 1.5em;
    margin: 0;
  }
}

.top-banner-spacer {
  height: $top-banner-height;
}

/******************************
GRIDS
******************************/

.container.centered {
  width: $centered-container-width;
  margin: auto;
}

.container {


  .row {
    *[class*="col"] {
      margin-bottom: $row-spacing;
    }

    .padding-large {
      padding: $padding-large;
    }

    .padding-medium {
      padding: $padding-medium;
    }

    .padding-small {
      padding: $padding-small;
    }
  }

  @for $i from 1 to 13 {

    @if $i == 12 {

      .col-12 {
        @extend .col;
        width: 100%;
      }

    } @else {

      & .col-#{$i} {
        @extend .col;
      }

      // $i is how many children there are in this row
      // $k is how wide this particular child is

      @for $k from 1 to 12 {
        .col-spacing-large > .col-#{$k}:first-child:nth-last-child(#{$i}),
        .col-spacing-large > *[class*='col']:first-child:nth-last-child(#{$i}) ~ .col-#{$k} {
          width: (($k * (100% - (($i - 1) * $col-spacing-large))) / 12 );
        }

        .col-spacing-medium > .col-#{$k}:first-child:nth-last-child(#{$i}),
        .col-spacing-medium > *[class*='col']:first-child:nth-last-child(#{$i}) ~ .col-#{$k} {
          width: (($k * (100% - (($i - 1) * $col-spacing-medium))) / 12 );
        }

        .col-spacing-small > .col-#{$k}:first-child:nth-last-child(#{$i}),
        .col-spacing-small > *[class*='col']:first-child:nth-last-child(#{$i}) ~ .col-#{$k} {
          width: (($k * (100% - (($i - 1) * $col-spacing-small))) / 12 );
        }
      }

      .col-spacing-large .col:not(:last-child) {
        margin-right: $col-spacing-large;
      }

      .col-spacing-medium .col:not(:last-child) {
        margin-right: $col-spacing-medium;
      }

      .col-spacing-small .col:not(:last-child) {
        margin-right: $col-spacing-small;
      }
    }
  }

  .row {
    font-size: 0;

    & > *[class*='col'] {
      font-size: $default-content-font-size;
      display: inline-block;
      vertical-align: top;
    }
  }

}

@media (max-width: $break-medium) and (min-width: $break-small) {

  html {
  .container {
      .row.col-spacing-large {

        /** middle sized medium spacing **/
        $middle-lg: $col-spacing-large * 0.8;
        /*********/

        *[class*='col'] {
          // using important to over ride ultraspecific procedurally generated pseudo selectors
          width: (50% - ($middle-lg / 2)) !important;
        }

        *[class*='col']:nth-child(odd) {
          margin-right: $middle-lg;
        }

      }

      .row.col-spacing-medium {

        /** middle sized medium spacing **/
        $middle-med: $col-spacing-medium * 0.8;
        /*********/

        *[class*='col'] {
          // using important to over ride ultraspecific procedurally generated pseudo selectors
          width: (50% - ($middle-med / 2)) !important;
        }

        *[class*='col']:nth-child(odd) {
          margin-right: $middle-med;
        }
      }

      .row.col-spacing-small {

        /** middle sized medium spacing **/
        $middle-sm: $col-spacing-small * 0.8;
        /*********/

        *[class*='col'] {
          // using important to over ride ultraspecific procedurally generated pseudo selectors
          width: (50% - ($middle-sm / 2)) !important;
        }

        *[class*='col']:nth-child(odd) {
          margin-right: $middle-sm;
        }
      }

      .row {

        *[class*='col']:nth-child(even) {
          margin-right: 0;
        }

        *[class*='col']:nth-child(odd):last-child {
          // using important to over ride ultraspecific procedurally generated pseudo selectors
          width: 100% !important;
          margin: 0;
        }

        *[class*='col'] {
          margin-bottom: $row-spacing * $medium-row-multipler;
        }
      }
    }
  }
}

@media (max-width: $break-small) {

  .container {
    .col-spacing-large, .row.col-spacing-medium, .row.col-spacing-small {
      & > *[class*='col'] {
        display: block;
        // NOTE: use !important here since prior widths are defined by ultra-specific pseudo selectors
        width: 100% !important;
        margin: 0;
        margin-bottom: $row-spacing * $small-row-multipler;
      }
    }
  }

}



/*******************************
FULL PAGE CONTENT AREAS
*******************************/

.full-page {
  height: 100vh;
}
